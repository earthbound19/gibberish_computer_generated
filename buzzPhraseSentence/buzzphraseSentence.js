// DESCRIPTION
// Creates any number of short and/or long buzzphrase sentences (at this writing, mottos or one-pronoune declarative sentences). Makes use of: https://www.npmjs.com/package/buzzphrase

// USAGE: pass this script two parameters; both are optional, but if you use 2 you must also provide 1:
// $1 The number of sentences to generate.
// $2 How many buzzphrases to extend the sentence to. The script picks randomly between 1 and 7 (weighted toward lower numbers) if you do not provide this. TO DO: make this actually do that :p Note that a parameter value of 1 doesn't "extend" the sentence per se--it just generates 1 buzzphrase in a sentence.
// e.g.:
// node thisScript.js 15 2
// -- will produce fifteen sentences, each of them extended once (in addition to the default first part of a sentence).

// BEGIN REQUIRES and GLOBALS:
  var buzzphrase = require('buzzphrase');
  var numberOfSentences = process.argv[2];
  var numberOfExtenders = process.argv[3];

  // re: http://stackoverflow.com/a/411388/1397555
  if (! numberOfSentences) {
  // console.log("no params")
  numberOfSentences = 1;
  }

  if (! numberOfExtenders) {
  // console.log("no params there either bud");
  // create an array that will be used as the odds of n extenders appearing in sentece:
  var rndExtenderNumArray = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 6, 7]
} else {
  // create an array that will be used as prior noted, but the odds are one hundred percent that the number of extenders are from process.argv[3] :
  var rndExtenderNumArray = [numberOfExtenders]
}
  // else { console.log("is a param there bud"); }

  // Until this is made as an include or module, the following array is a list of techy present tense verbs:
  techyVerbsPresentTense = [
    "accellerate"
    ,"admit"
    ,"agglomerate"
    ,"aggregate"
    ,"architect"
    ,"arrange"
    ,"back"
    ,"back up"
    ,"backup"
    ,"balance"
    ,"begin"
    ,"benchmark"
    ,"block"
    ,"boot"
    ,"boot up"
    ,"brand"
    ,"change"
    ,"chat"
    ,"click"
    ,"click on"
    ,"close"
    ,"cluster"
    ,"code"
    ,"compare"
    ,"concatenate"
    ,"conceal"
    ,"conceptualize"
    ,"configure"
    ,"connect"
    ,"containerize"
    ,"control"
    ,"converge"
    ,"convert"
    ,"convey"
    ,"copy"
    ,"crowd-source"
    ,"cultivate"
    ,"customize"
    ,"cut"
    ,"decentralize"
    ,"decrement"
    ,"define"
    ,"delete"
    ,"deliver"
    ,"deploy"
    ,"deserialize"
    ,"design"
    ,"digitize"
    ,"disable"
    ,"disburse"
    ,"disintermediate"
    ,"disrupt"
    ,"distribute"
    ,"download"
    ,"drag"
    ,"drive"
    ,"e-enable"
    ,"echo"
    ,"edit"
    ,"embrace"
    ,"emit"
    ,"empower"
    ,"enable"
    ,"engage"
    ,"engineer"
    ,"enhance"
    ,"envisioneer"
    ,"equip"
    ,"evolve"
    ,"excel"
    ,"exit"
    ,"expedite"
    ,"expidite"
    ,"exploit"
    ,"export"
    ,"extend"
    ,"facilitate"
    ,"file"
    ,"fill"
    ,"filter"
    ,"filter out"
    ,"find"
    ,"fit"
    ,"flip"
    ,"format"
    ,"forward"
    ,"freeze"
    ,"generate"
    ,"go down"
    ,"group"
    ,"grow"
    ,"hack"
    ,"hack into"
    ,"harness"
    ,"help"
    ,"hide"
    ,"hold down"
    ,"hook up"
    ,"hybridize"
    ,"hyper-converge"
    ,"implement"
    ,"incentivize"
    ,"increment"
    ,"incubate"
    ,"initialize"
    ,"innovate"
    ,"input"
    ,"insert"
    ,"integrate"
    ,"intermediate"
    ,"isolate"
    ,"iterate"
    ,"key in"
    ,"kill"
    ,"leverage"
    ,"listen to"
    ,"load"
    ,"load-balance"
    ,"lobotomize"
    ,"log in"
    ,"manage"
    ,"marshal"
    ,"matrix"
    ,"maximize"
    ,"megathread"
    ,"merge"
    ,"mesh"
    ,"mindshare"
    ,"monetize"
    ,"monitor"
    ,"morph"
    ,"move"
    ,"offload"
    ,"omit"
    ,"open"
    ,"opt out"
    ,"opt-in"
    ,"optimize"
    ,"orchestrate"
    ,"oversee"
    ,"perform"
    ,"permit"
    ,"place"
    ,"plug in"
    ,"plug-in"
    ,"poll down"
    ,"pop up"
    ,"popup"
    ,"power"
    ,"power down"
    ,"power up"
    ,"press"
    ,"print"
    ,"print out"
    ,"prioritize"
    ,"process"
    ,"productize"
    ,"protect"
    ,"pulldown"
    ,"range"
    ,"re-purpose"
    ,"re-route"
    ,"read"
    ,"recieve"
    ,"recontextualize"
    ,"record"
    ,"redefine"
    ,"redo"
    ,"refer"
    ,"refine"
    ,"reintermediate"
    ,"reinvent"
    ,"reinvigorate"
    ,"release"
    ,"reload"
    ,"repeat"
    ,"replace"
    ,"repurpose"
    ,"resolve"
    ,"resubmit"
    ,"resupply"
    ,"retrieve"
    ,"reveal"
    ,"revolutionize"
    ,"right-size"
    ,"route"
    ,"run"
    ,"save"
    ,"scale"
    ,"scan"
    ,"scroll"
    ,"scroll down"
    ,"secure"
    ,"seize"
    ,"select"
    ,"send"
    ,"serialize"
    ,"set up"
    ,"setup"
    ,"share"
    ,"show"
    ,"shut down"
    ,"sign in"
    ,"sign up"
    ,"solve"
    ,"sort"
    ,"split"
    ,"start"
    ,"start up"
    ,"store"
    ,"strategize"
    ,"stream"
    ,"streamline"
    ,"submit"
    ,"supply"
    ,"synchronize"
    ,"syndicate"
    ,"synergize"
    ,"synthesize"
    ,"systematize"
    ,"take offline"
    ,"take online"
    ,"target"
    ,"transfer"
    ,"transform"
    ,"transition"
    ,"transmit"
    ,"turn off"
    ,"undo"
    ,"ungroup"
    ,"unleash"
    ,"unmarshal"
    ,"unresolve"
    ,"upcycle"
    ,"unmesh"
    ,"uphold"
    ,"upload"
    ,"utilize"
    ,"virtualize"
    ,"visualize"
    ,"whiteboard"
    ,"wipe out"
    ,"write"
  ];

  var techyPresentTenseVerbsArrayRange = ( techyVerbsPresentTense.length - 1 )      // The -1 else we will end up with an out of range error at some random point (which will appear as the word "undefined").
  var rndExtenderNumArrayRange = ( rndExtenderNumArray.length - 1 )

  // re: http://stackoverflow.com/a/1527820/1397555
  function getRandomInt(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min;
  }
// END REQUIRES and GLOBALS

// We freeze decremented reciprocal bandwidth.
for (i=0; i < numberOfSentences; i++) {
  var sentenceStartStr = techyVerbsPresentTense[ getRandomInt(0, techyPresentTenseVerbsArrayRange) ]
  var sentenceEndStr = buzzphrase.getPhrase( rndExtenderNumArray[getRandomInt(0, rndExtenderNumArrayRange)] )
  console.log("We " + sentenceStartStr + " " + sentenceEndStr + ".")
    //console.log(sentenceEndStr)
}

// TO DO:
// ? make use of: https://www.npmjs.com/package/conjugate
// ? make use of: https://www.npmjs.com/package/buzzwords
// Not necessarily related, but useful: https://www.npmjs.com/package/wordpos -- https://github.com/wooorm/hedges
